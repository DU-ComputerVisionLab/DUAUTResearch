/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.zeno_test131117;

import java.awt.event.WindowEvent;
import java.lang.reflect.InvocationTargetException;
import javax.swing.AbstractButton;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;


/**
 *
 * @author Michelle
 */
public class DanceDanceSwingInterface extends javax.swing.JFrame {

    public static boolean isCalibratePressed() {
        //
        boolean nowState = callibrationState;
            callibrationState = false;
             System.out.print("");
        return nowState;
                
    }

    public static void sendNeckYaw(double sendNeckYaw) {
       NOWcalibNeckYaw = sendNeckYaw;
    }
    
    public static double calibNeckYaw()
    {
        return NOWcalibNeckYaw;
    }

    static boolean listenForArrow() {
        
        boolean arrowPressedNow = arrowPressed;
        arrowPressed = false;
        return arrowPressedNow;
        
    }

    static int getDirrectionOfKid() {
       return dirrection;
    }

    /**
     * Creates new form DanceDanceSwingInterface
     */
    public DanceDanceSwingInterface() {
        initComponents();
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                System.out.println("Closing...");
                App.closeEarly();
                ((JFrame)e.getSource()).setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        EmoButtonGroup = new javax.swing.ButtonGroup();
        storyTellButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        robotRspns = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputCmnd = new javax.swing.JTextPane();
        robotRspnsLabel = new javax.swing.JTextField();
        inputCmndLabel = new javax.swing.JTextField();
        crntState = new javax.swing.JTextField();
        upButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        crntStateLabel = new javax.swing.JTextField();
        StartInit = new javax.swing.JButton();
        centerButton = new javax.swing.JButton();
        animCount = new javax.swing.JTextField();
        Happy = new javax.swing.JRadioButton();
        Sad = new javax.swing.JRadioButton();
        Surprised = new javax.swing.JRadioButton();
        Fear = new javax.swing.JRadioButton();
        Anger = new javax.swing.JRadioButton();
        Neutral = new javax.swing.JRadioButton();
        StoryTellChoice1 = new javax.swing.JRadioButton();
        StoryTellChoice2 = new javax.swing.JRadioButton();
        StoryTellChoice3 = new javax.swing.JRadioButton();
        callibrationSet = new javax.swing.JButton();
        neckLeftButton = new javax.swing.JButton();
        neckRightButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        CFeyebrowsAnswer = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        CFblinkAnswer = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        CFeyesLAnswer = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        CFeyesRAnswer = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        CFsmileLAnswer = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        CFsmileRAnswer = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        CFmouthAnswer = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mouth = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        HelpChoice = new javax.swing.JRadioButton();
        RepeatChoice = new javax.swing.JRadioButton();
        TalkChoice = new javax.swing.JRadioButton();
        OverChoice = new javax.swing.JRadioButton();
        rightButton1 = new javax.swing.JButton();
        leftButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        CFeyebrowsResponse = new javax.swing.JTextPane();
        jScrollPane18 = new javax.swing.JScrollPane();
        CFblinkResponse = new javax.swing.JTextPane();
        jScrollPane19 = new javax.swing.JScrollPane();
        CFeyesLResponse = new javax.swing.JTextPane();
        jScrollPane20 = new javax.swing.JScrollPane();
        CFeyesRResponse = new javax.swing.JTextPane();
        jScrollPane21 = new javax.swing.JScrollPane();
        CFsmileLResponse = new javax.swing.JTextPane();
        jScrollPane22 = new javax.swing.JScrollPane();
        CFsmileRResponse = new javax.swing.JTextPane();
        jScrollPane23 = new javax.swing.JScrollPane();
        CFmouthResponse = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 102));

        robotRspns.setEditable(false);
        robotRspns.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(robotRspns);

        inputCmnd.setEnabled(false);
        jScrollPane2.setViewportView(inputCmnd);

        robotRspnsLabel.setEditable(false);
        robotRspnsLabel.setText("Robot Response");
        robotRspnsLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                robotRspnsLabelActionPerformed(evt);
            }
        });

        inputCmndLabel.setEditable(false);
        inputCmndLabel.setText("Input Command");

        crntState.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        crntState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crntStateActionPerformed(evt);
            }
        });

        upButton.setText("^");
        upButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upButtonMouseClicked(evt);
            }
        });
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        rightButton.setText(">");
        rightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightButtonMouseClicked(evt);
            }
        });
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        downButton.setText("V");
        downButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downButtonMouseClicked(evt);
            }
        });

        leftButton.setText("<");
        leftButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftButtonMouseClicked(evt);
            }
        });

        enterButton.setText("Enter");
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                enterButtonMouseReleased(evt);
            }
        });

        crntStateLabel.setEditable(false);
        crntStateLabel.setText("Robot or Human Says");
        crntStateLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crntStateLabelActionPerformed(evt);
            }
        });

        StartInit.setText("Start");
        StartInit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                StartInitMouseReleased(evt);
            }
        });
        StartInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartInitActionPerformed(evt);
            }
        });

        centerButton.setText("Reset");
        centerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                centerButtonMouseReleased(evt);
            }
        });
        centerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centerButtonActionPerformed(evt);
            }
        });

        animCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animCountActionPerformed(evt);
            }
        });

        EmoButtonGroup.add(Happy);
        Happy.setText("Happy");
        Happy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HappyMouseClicked(evt);
            }
        });

        EmoButtonGroup.add(Sad);
        Sad.setText("Sad");
        Sad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SadMouseClicked(evt);
            }
        });

        EmoButtonGroup.add(Surprised);
        Surprised.setText("Surprised");
        Surprised.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SurprisedMouseClicked(evt);
            }
        });

        EmoButtonGroup.add(Fear);
        Fear.setText("Fear");
        Fear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FearMouseClicked(evt);
            }
        });

        EmoButtonGroup.add(Anger);
        Anger.setText("Anger");
        Anger.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AngerMouseClicked(evt);
            }
        });

        EmoButtonGroup.add(Neutral);
        Neutral.setText("Neutral");
        Neutral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NeutralMouseClicked(evt);
            }
        });

        StoryTellChoice1.setBackground(new java.awt.Color(255, 255, 255));
        storyTellButtonGroup.add(StoryTellChoice1);
        StoryTellChoice1.setText("Choice 2");
        StoryTellChoice1.setActionCommand("Choice1");
        StoryTellChoice1.setName("StoryTellChoice1"); // NOI18N
        StoryTellChoice1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StoryTellChoice1MouseClicked(evt);
            }
        });
        StoryTellChoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoryTellChoice1ActionPerformed(evt);
            }
        });

        StoryTellChoice2.setBackground(new java.awt.Color(255, 255, 255));
        storyTellButtonGroup.add(StoryTellChoice2);
        StoryTellChoice2.setText("Choice 1");
        StoryTellChoice2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StoryTellChoice2MouseClicked(evt);
            }
        });
        StoryTellChoice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoryTellChoice2ActionPerformed(evt);
            }
        });

        StoryTellChoice3.setBackground(new java.awt.Color(255, 255, 255));
        storyTellButtonGroup.add(StoryTellChoice3);
        StoryTellChoice3.setText("Choice 3");
        StoryTellChoice3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StoryTellChoice3MouseClicked(evt);
            }
        });
        StoryTellChoice3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoryTellChoice3ActionPerformed(evt);
            }
        });

        callibrationSet.setText("Set");
        callibrationSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                callibrationSetMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                callibrationSetMouseReleased(evt);
            }
        });
        callibrationSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callibrationSetActionPerformed(evt);
            }
        });

        neckLeftButton.setText("<");
        neckLeftButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                neckLeftButtonMouseClicked(evt);
            }
        });

        neckRightButton.setText(">");
        neckRightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                neckRightButtonMouseClicked(evt);
            }
        });
        neckRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neckRightButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(null);

        jScrollPane4.setViewportView(CFeyebrowsAnswer);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(160, 80, 80, 30);

        jScrollPane6.setViewportView(CFblinkAnswer);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(160, 160, 80, 30);

        jScrollPane3.setViewportView(CFeyesLAnswer);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(50, 160, 60, 30);

        jScrollPane7.setViewportView(CFeyesRAnswer);

        jPanel1.add(jScrollPane7);
        jScrollPane7.setBounds(320, 160, 60, 30);

        jScrollPane8.setViewportView(CFsmileLAnswer);

        jPanel1.add(jScrollPane8);
        jScrollPane8.setBounds(290, 260, 70, 30);

        jScrollPane9.setViewportView(CFsmileRAnswer);

        jPanel1.add(jScrollPane9);
        jScrollPane9.setBounds(70, 260, 70, 30);

        jScrollPane10.setViewportView(CFmouthAnswer);

        jPanel1.add(jScrollPane10);
        jScrollPane10.setBounds(170, 260, 60, 30);

        jLabel6.setText("eyebrows");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(190, 60, 60, 14);

        jLabel7.setText("eyes Right");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(314, 140, 60, 14);

        jLabel8.setText("eyes Left");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(50, 140, 50, 14);

        jLabel9.setText("smile Right");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(294, 240, 60, 14);

        jLabel10.setText("smile Left");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(90, 240, 50, 14);

        jLabel11.setText("blink");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(190, 140, 30, 14);

        mouth.setText("mouth");
        jPanel1.add(mouth);
        mouth.setBounds(190, 230, 40, 14);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, -10, 390, 380);

        storyTellButtonGroup.add(HelpChoice);
        HelpChoice.setText("Help");

        storyTellButtonGroup.add(RepeatChoice);
        RepeatChoice.setText("Repeat");

        storyTellButtonGroup.add(TalkChoice);
        TalkChoice.setText("Talk");

        storyTellButtonGroup.add(OverChoice);
        OverChoice.setText("OverRide Correct");
        OverChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OverChoiceActionPerformed(evt);
            }
        });

        rightButton1.setText(">");
        rightButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightButton1MouseClicked(evt);
            }
        });
        rightButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButton1ActionPerformed(evt);
            }
        });

        leftButton1.setText("<");
        leftButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftButton1MouseClicked(evt);
            }
        });

        jPanel2.setLayout(null);

        jScrollPane17.setViewportView(CFeyebrowsResponse);

        jPanel2.add(jScrollPane17);
        jScrollPane17.setBounds(180, 90, 70, 30);

        jScrollPane18.setViewportView(CFblinkResponse);

        jPanel2.add(jScrollPane18);
        jScrollPane18.setBounds(170, 160, 90, 30);

        jScrollPane19.setViewportView(CFeyesLResponse);

        jPanel2.add(jScrollPane19);
        jScrollPane19.setBounds(50, 160, 60, 30);

        jScrollPane20.setViewportView(CFeyesRResponse);

        jPanel2.add(jScrollPane20);
        jScrollPane20.setBounds(320, 160, 60, 30);

        jScrollPane21.setViewportView(CFsmileLResponse);

        jPanel2.add(jScrollPane21);
        jScrollPane21.setBounds(290, 250, 70, 30);

        jScrollPane22.setViewportView(CFsmileRResponse);

        jPanel2.add(jScrollPane22);
        jScrollPane22.setBounds(70, 250, 70, 30);

        jScrollPane23.setViewportView(CFmouthResponse);

        jPanel2.add(jScrollPane23);
        jScrollPane23.setBounds(180, 240, 70, 30);
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, -10, 390, 380);

        jLabel3.setText("Zeno Nod Dance");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Game 2: (Type in Child Response CopyFace)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Game 2: (Child Response CopyFace)");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Game 1 + 2:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Game 3:  Story Tell");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Game 4: robotGaze");

        jLabel12.setText("Callibrate Zeno's Head");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(robotRspnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(StartInit, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(inputCmndLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(leftButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rightButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(centerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(enterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(2, 2, 2))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(crntStateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(animCount, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel12))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(neckLeftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(callibrationSet, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(neckRightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(crntState, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Neutral)
                                            .addComponent(Sad)
                                            .addComponent(Surprised)
                                            .addComponent(Happy)
                                            .addComponent(Fear)
                                            .addComponent(Anger))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StoryTellChoice3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(OverChoice)
                                            .addComponent(TalkChoice)
                                            .addComponent(HelpChoice)
                                            .addComponent(RepeatChoice))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(StoryTellChoice2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(StoryTellChoice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(2, 2, 2))))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(robotRspnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartInit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputCmndLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(crntStateLabel)
                                    .addComponent(animCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rightButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(leftButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(12, 12, 12)
                                .addComponent(upButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(centerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(downButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(crntState, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(neckLeftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(neckRightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(callibrationSet, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(521, 521, 521))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Anger)
                            .addComponent(StoryTellChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(StoryTellChoice1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StoryTellChoice3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HelpChoice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RepeatChoice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TalkChoice))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Fear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Happy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Neutral)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Sad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Surprised)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OverChoice)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void robotRspnsLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_robotRspnsLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_robotRspnsLabelActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightButtonActionPerformed

    private void crntStateLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crntStateLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crntStateLabelActionPerformed

    private void crntStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crntStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crntStateActionPerformed


    protected static void RadButtonSetText(String Choice1, String Choice2, String Choice3)
    {
        StoryTellChoice1.setText(Choice1);
        StoryTellChoice2.setText(Choice2);
        StoryTellChoice3.setText(Choice3);
    }
      
        
    private void enterButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseReleased
        String inputEntered = inputCmnd.getText();
        //Kris's radio button 
        if(Happy.isSelected()) 
        {
            emotionPressed = Happy.getText();
        }
         if(Sad.isSelected()) 
        {
            emotionPressed = Sad.getText();
        }
          if(Surprised.isSelected()) 
        {
            emotionPressed = Surprised.getText();
        }
        
            if(Fear.isSelected()) 
        {
            emotionPressed = Fear.getText();
        }
             if(Anger.isSelected()) 
        {
            emotionPressed = Anger.getText();
        }
             if(Neutral.isSelected()) 
        {
            emotionPressed = Neutral.getText();
        }

            
            
        //StoryTell Choices
           if(StoryTellChoice1.isSelected())
        {
            STChoicePressed = StoryTellChoice1.getText();
        }            
           if(StoryTellChoice2.isSelected())
        {
            STChoicePressed = StoryTellChoice2.getText();
        }         
           if(StoryTellChoice3.isSelected())
        {
            STChoicePressed = StoryTellChoice3.getText();
        }         
           if(HelpChoice.isSelected())
        {
            STChoicePressed = HelpChoice.getText();
        }         
           if(TalkChoice.isSelected())
        {
            STChoicePressed = TalkChoice.getText();
        }      
           if(RepeatChoice.isSelected())
        {
            STChoicePressed = RepeatChoice.getText();
        }    
           
          if(OverChoice.isSelected())
        {
            STChoicePressed = "Over";
        }    
   
           
        
       System.out.println(emotionPressed+" is selected");      
        setInputEntered(inputEntered);
        System.out.println("mouse release");
        enterPressed=true;       
    }//GEN-LAST:event_enterButtonMouseReleased

    public static String getEmoButtonPressed()
    {
        return emotionPressed;
    }
    
    
    public static String getSTChoicePressed()
    {
        return STChoicePressed;
    }
    
    public void setButtonEnter(String Input)
{
    enteredInput=Input;
    System.out.println("you typed: From DD"+enteredInput);
} 
    
        public void setInputEntered(String Input)
{
    enteredInput=Input;
    System.out.println("you typed: From DD"+enteredInput);
} 
    
    public static boolean getIfEnterPressed(){
        System.out.print(" ");
        return enterPressed;
    }

/*public void setEnterPressed()
{
    enterPressed=true;
   // System.out.print("in setEnterPressed DanceDanceSwingInterface");
}*/

public static void writeInputEntered(String clear)
{
    inputCmnd.setText(clear);
}

public static void writeHumanSay(String clear)
{
    crntState.setText(clear);
}

public static String getInputEntered()
{
    while(!enterPressed)
    {  
         System.out.print("");
    }
    System.out.println("Enter pressed! send out!");
    enterPressed=false;
    return enteredInput;
}

public static String getButtonEntered()
{
    while(!enterPressed)
    {  
         System.out.print("");
    }
    System.out.println("Enter pressed! send out!");
    enterPressed=false;
    return enteredInput;
}

   
public static void writeState(String state)
{
    crntState.setText(state);
}  

    private void upButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upButtonMouseClicked
        // TODO add your handling code here:
        App.upNod();
    }//GEN-LAST:event_upButtonMouseClicked

    private void rightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightButtonMouseClicked
        // TODO add your handling code here:
        App.rightNod();
    }//GEN-LAST:event_rightButtonMouseClicked

    private void downButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downButtonMouseClicked
        // TODO add your handling code here:
        App.downNod();
    }//GEN-LAST:event_downButtonMouseClicked

    private void leftButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftButtonMouseClicked
        // TODO add your handling code here:
        App.leftNod();
    }//GEN-LAST:event_leftButtonMouseClicked

    public static int getClicked(){
        if(leftClicked)
        {
            leftClicked=false;
            return 1;
        }    
        
        else if(upClicked)
        {
            upClicked=false;
            return 2;
        }
        else if(rightClicked)
        {   
            rightClicked=false;
            return 3;
        }    
        else if (downClicked)
        {   
            downClicked=false;
            return 4;
        }
        else
        {return 0;}
    }
    
    private void StartInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartInitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartInitActionPerformed

    private void StartInitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartInitMouseReleased
    BrainWorker leWorker = new BrainWorker();
    leWorker.execute();
    StartInit.setEnabled(false);
    inputCmnd.setEnabled(true);
    
    }//GEN-LAST:event_StartInitMouseReleased

    private void centerButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_centerButtonMouseReleased
        App.centerNod();
    }//GEN-LAST:event_centerButtonMouseReleased

    private void centerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_centerButtonActionPerformed

    /**
     *Kris radioButton choices
     * @param evt 
     *
     */
    private void StoryTellChoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoryTellChoice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice1ActionPerformed

    private void StoryTellChoice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoryTellChoice2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice2ActionPerformed

    private void StoryTellChoice3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoryTellChoice3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice3ActionPerformed

    private void callibrationSetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_callibrationSetMouseReleased
        callibrationState= true;
    }//GEN-LAST:event_callibrationSetMouseReleased

    private void callibrationSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callibrationSetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_callibrationSetActionPerformed

    
    private void neckLeftButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_neckLeftButtonMouseClicked
       if((NOWcalibNeckYaw-0.025)>0.01)
       {
             NOWcalibNeckYaw = NOWcalibNeckYaw-0.025;
             App.moveHeadThereRobot(NOWcalibNeckYaw);
             System.out.println("left - "+ NOWcalibNeckYaw);
       }
    }//GEN-LAST:event_neckLeftButtonMouseClicked

    private void neckRightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_neckRightButtonMouseClicked
       if((NOWcalibNeckYaw+0.025)<.99)
        {
             NOWcalibNeckYaw = NOWcalibNeckYaw+0.025;
             App.moveHeadThereRobot(NOWcalibNeckYaw);
             System.out.println("right + "+ NOWcalibNeckYaw);
         }
    }//GEN-LAST:event_neckRightButtonMouseClicked

    private void neckRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neckRightButtonActionPerformed
       
    }//GEN-LAST:event_neckRightButtonActionPerformed

    private void AngerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AngerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AngerMouseClicked

    private void FearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FearMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_FearMouseClicked

    private void HappyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HappyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_HappyMouseClicked

    private void NeutralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NeutralMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_NeutralMouseClicked

    private void SadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SadMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SadMouseClicked

    private void SurprisedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SurprisedMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SurprisedMouseClicked

    private void StoryTellChoice2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StoryTellChoice2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice2MouseClicked

    private void StoryTellChoice1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StoryTellChoice1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice1MouseClicked

    private void StoryTellChoice3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StoryTellChoice3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_StoryTellChoice3MouseClicked

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_upButtonActionPerformed

    private void callibrationSetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_callibrationSetMouseClicked
        callibrationState= true;
        System.out.println("StateCalib Clicked is: "+callibrationState);
    }//GEN-LAST:event_callibrationSetMouseClicked

    private void rightButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightButton1MouseClicked
        arrowPressed = true;
        dirrection  = 1;
    }//GEN-LAST:event_rightButton1MouseClicked

    private void rightButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightButton1ActionPerformed

    private void leftButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftButton1MouseClicked
        arrowPressed = true;
        dirrection = 0;
    }//GEN-LAST:event_leftButton1MouseClicked

    private void OverChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OverChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OverChoiceActionPerformed

    private void animCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_animCountActionPerformed

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException, InvocationTargetException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DanceDanceSwingInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DanceDanceSwingInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DanceDanceSwingInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DanceDanceSwingInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeAndWait(new Runnable() 
        {
            @Override
            public void run() {
                boolean check =false;
                new DanceDanceSwingInterface().setVisible(true);
                
                robotRspns.setText("Please wait...");
                //Talk.setSelected(true);
            } 
        });
        //This is awesome!! Create a thread to start the robot comm
        SwingUtilities.invokeLater(new Runnable()
        {  
            @Override
            public void run(){
            App.init();  
            DanceDanceSwingInterface.robotRspns.setText("Initialization Done! Press Start if ready");
            }    
        });
        
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JRadioButton Anger;
    public static javax.swing.JTextPane CFblinkAnswer;
    public static javax.swing.JTextPane CFblinkResponse;
    public static javax.swing.JTextPane CFeyebrowsAnswer;
    public static javax.swing.JTextPane CFeyebrowsResponse;
    public static javax.swing.JTextPane CFeyesLAnswer;
    public static javax.swing.JTextPane CFeyesLResponse;
    public static javax.swing.JTextPane CFeyesRAnswer;
    public static javax.swing.JTextPane CFeyesRResponse;
    public static javax.swing.JTextPane CFmouthAnswer;
    public static javax.swing.JTextPane CFmouthResponse;
    public static javax.swing.JTextPane CFsmileLAnswer;
    public static javax.swing.JTextPane CFsmileLResponse;
    public static javax.swing.JTextPane CFsmileRAnswer;
    public static javax.swing.JTextPane CFsmileRResponse;
    private javax.swing.ButtonGroup EmoButtonGroup;
    public static javax.swing.JRadioButton Fear;
    public static javax.swing.JRadioButton Happy;
    private javax.swing.JRadioButton HelpChoice;
    public static javax.swing.JRadioButton Neutral;
    private javax.swing.JRadioButton OverChoice;
    public static javax.swing.JRadioButton RepeatChoice;
    public static javax.swing.JRadioButton Sad;
    private javax.swing.JButton StartInit;
    private static javax.swing.JRadioButton StoryTellChoice1;
    private static javax.swing.JRadioButton StoryTellChoice2;
    private static javax.swing.JRadioButton StoryTellChoice3;
    public static javax.swing.JRadioButton Surprised;
    private javax.swing.JRadioButton TalkChoice;
    public static javax.swing.JTextField animCount;
    private javax.swing.JButton callibrationSet;
    private javax.swing.JButton centerButton;
    private static javax.swing.JTextField crntState;
    private javax.swing.JTextField crntStateLabel;
    private javax.swing.JButton downButton;
    private javax.swing.JButton enterButton;
    private static javax.swing.JTextPane inputCmnd;
    private javax.swing.JTextField inputCmndLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton leftButton;
    private javax.swing.JButton leftButton1;
    private javax.swing.JLabel mouth;
    private javax.swing.JButton neckLeftButton;
    private javax.swing.JButton neckRightButton;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton rightButton1;
    public static javax.swing.JTextPane robotRspns;
    private javax.swing.JTextField robotRspnsLabel;
    private javax.swing.ButtonGroup storyTellButtonGroup;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
private static int startPressCount=0;
private static String enteredInput;
private static boolean enterPressed=false;
private static boolean start=false;
private static int enterPressCount;
private static boolean upClicked=false;
private static boolean downClicked=false;
private static boolean leftClicked=false;
private static boolean rightClicked=false;
static String[] OneSequence=new String[12];
static String[] TwoSequence=new String[12];
static String[] ThreeSequence=new String[12];
static String partID;
private static String emotionPressed;
private static String STChoicePressed;
private static boolean callibrationState = false;
public static double neckYawAngle;
private static double NOWcalibNeckYaw;
private static double NOWcalibNeckPitch;
private static boolean arrowPressed;
private static int dirrection;

}